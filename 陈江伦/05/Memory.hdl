// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl

/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load==1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid. Access to any address in 
 * the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the 
 * Screen and Keyboard chip specifications given in the book.
 */

CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    // Put your code here:
    And(a=address[14],b=address[14],out=p);
    Not(in=p,out=p1);
    And(a=p,b=address[13],out=p3);
    Not(in=p3,out=Rp3);
    And(a=p,b=Rp3,out=p2);

	And(a=load,b=p1,out=f1);
	And(a=load,b=p2,out=f2);

    RAM16K(in=in,load=f1,address=address[0..13],out=w1);
    Screen(in=in,load=f2,address=address[0..12],out=w2);
    Keyboard(out=w3);

    Mux16(a=w2,b=w3,sel=p3,out=w4);
    Mux16(a=w4,b=w1,sel=p1,out=out);
}