// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Put your code here:
DMux8Way(in=load,sel=address[6..8],a=fa,b=fb,c=fc,d=fd,e=fe,f=ff,g=fg,h=fh);
RAM64(in=in,load=fa,address=address[0..5],out=ina);
RAM64(in=in,load=fb,address=address[0..5],out=inb);
RAM64(in=in,load=fc,address=address[0..5],out=inc);
RAM64(in=in,load=fd,address=address[0..5],out=ind);
RAM64(in=in,load=fe,address=address[0..5],out=ine);
RAM64(in=in,load=ff,address=address[0..5],out=inf);
RAM64(in=in,load=fg,address=address[0..5],out=ing);
RAM64(in=in,load=fh,address=address[0..5],out=inh);
Mux8Way16(a=ina,b=inb,c=inc,d=ind,e=ine,f=inf,g=ing,h=inh,sel=address[6..8],out=out); 

}